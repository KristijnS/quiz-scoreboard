/**
 * Round Entity
 * 
 * Purpose: Represents a single round/question/category in a quiz.
 * 
 * Examples: 
 * - Round 1: "General Knowledge" (maxScore: 10)
 * - Round 2: "Sports Trivia" (maxScore: 15)
 * - Round 3: "Bonus Round" (maxScore: 20, excludeFromScale: true)
 * 
 * Scale Conversion:
 * - Normal rounds: Scores converted to standardScale when enabled
 * - Excluded rounds (excludeFromScale=true): Scores NOT converted, counted as-is
 * - Use case: Bonus rounds that shouldn't be normalized
 * 
 * Performance Optimization:
 * - Indexed on 'nr' for fast sorting (ORDER BY nr)
 * - Indexed on 'quizId' for fast joins when fetching quiz data
 * 
 * Database Table: "round"
 */

import { Entity, PrimaryGeneratedColumn, Column, ManyToOne, OneToMany, Index } from "typeorm";
import { Quiz } from "./Quiz";
import { Score } from "./Score";

@Entity()
export class Round {
    /**
     * Primary key - unique identifier for the round
     * Auto-generated by the database
     */
    @PrimaryGeneratedColumn()
    id!: number;

    /**
     * Round title/name (e.g., "General Knowledge", "Round 1", "Bonus Round")
     * Displayed in scoreboard columns and UI
     */
    @Column()
    title!: string;

    /**
     * Round number - determines display order
     * 
     * Example: nr=1 for first round, nr=2 for second round, etc.
     * 
     * Indexed for performance: Enables fast sorting (ORDER BY nr ASC)
     * Used in: Scoreboard (displays rounds left-to-right), ChartView
     */
    @Column()
    @Index() // Index on nr for sorting
    nr!: number;

    /**
     * Maximum possible score for this round
     * 
     * Used for:
     * - Scale conversion calculation: (actualScore / maxScore) * standardScale
     * - Validation: Ensuring entered scores don't exceed maximum
     * - Display: Showing "8/10" format in UI
     * 
     * Example: maxScore=10 means teams can score 0-10 points
     */
    @Column()
    maxScore!: number;

    /**
     * Exclude from Scale Conversion Flag
     * 
     * When true: This round's scores are NOT converted when scaleConversionEnabled=true
     * When false: Normal behavior - scores are converted if enabled
     * 
     * Use case: Bonus rounds that should count full value regardless of scale
     * Example: 20-point bonus round in a quiz with standardScale=10
     *          - Normal rounds: converted to /10
     *          - This round: keeps /20 (not converted)
     * 
     * Default: false (participates in scale conversion)
     */
    @Column({ default: false })
    excludeFromScale!: boolean;

    /**
     * Parent quiz reference
     * Many rounds belong to one quiz
     * 
     * Indexed for performance: Enables fast joins when fetching quiz with rounds
     * Foreign key: round.quizId â†’ quiz.id
     */
    @ManyToOne(() => Quiz, quiz => quiz.rounds)
    @Index() // Index on quizId for faster joins
    quiz!: Quiz;

    /**
     * All scores entered for this round across all teams
     * 
     * Example: Round 1 with 40 teams = 40 score entries
     * 
     * Cascade: When round is deleted, all associated scores are automatically deleted
     * Used in: Score entry page, scoreboard calculations
     */
    @OneToMany(() => Score, score => score.round, { cascade: true, onDelete: 'CASCADE' })
    scores!: Score[];
}